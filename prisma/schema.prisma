// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model App {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @default(now())
  name        String
  description String?
  datastore   Json?

  scriptMain ScriptMain?

  scripts   Script[]
  secrets   Secret[]
  schedules Schedule[]
  runs      AppRun[]

  @@map("apps")
}

model AppEvent {
  id           String    @id @default(uuid())
  timestamp    String
  deploymentId String
  eventType    String
  eventPayload Json

  @@map("apps_events")
}

model AppRun {
  id            String    @id @default(uuid())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @default(now())
  success       Boolean
  deploymentId  String
  scheduled     Boolean   @default(false)
  result        Json?
  inputs        Json?

  appId         String
  app           App?   @relation(fields: [appId], references: [id])

  @@map("apps_runs")
}

model Secret {
  id             String    @id @default(uuid())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @default(now())
  key            String
  encryptedValue String

  appId String
  app   App?   @relation(fields: [appId], references: [id])

  @@map("secrets")
}

model Schedule {
  id             String    @id @default(uuid())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @default(now())
  crontab        String
  inputs         Json?

  appId String
  app   App?   @relation(fields: [appId], references: [id])

  @@map("schedules")
}

model Script {
  id           String    @id @default(uuid())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @default(now())
  name         String
  filename     String
  description  String?
  code         String
  order        Int?      @default(0)
  appId        String
  inputSchema  Json?
  outputSchema Json?

  app        App         @relation(fields: [appId], references: [id])
  scriptMain ScriptMain?

  @@map("scripts")
}

model ScriptMain {
  appId    String @id
  scriptId String @unique

  app    App    @relation(fields: [appId], references: [id])
  script Script @relation(fields: [scriptId], references: [id])

  @@map("script_main")
}

model ResourceInstance {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now())

  @@map("resoure_instances")
}
