# Make sure to override these in deployment
DATABASE_URL=postgres://zipper_user:zipper_password@localhost:35432/zipper_functions_dev

# Get one from https://dash.deno.com/account#access-tokens
DENO_DEPLOY_TOKEN=ddp_UnEzUMqiRvy6mdXtwn2u3bxDLmr1sv02gRPW

# Run `node -e "console.log(crypto.randomBytes(32).toString('hex'))"`
ENCRYPTION_KEY=

NODE_ENV=development

# Get this from https://liveblocks.io/docs/get-started/react
LIVEBLOCKS_PUBLIC_KEY=pk_dev_WaQ9OrYRc8p-PmBFJeYpLguPZfhANQWyjsLuYYnxKIQxXD8gnJ0VlUYSCW4I3Vwa
LIVEBLOCKS_SECRET_KEY=

# yarn deno:dev or yarn deno:deploy ./src/workers/parse-inputs-for-types.deno.ts
PARSE_INPUT_URL=https://z-parse-input-for-types.deno.dev

REDIS_HOST=localhost
REDIS_PORT=36379

# yarn deno:dev or yarn deno:deploy ./src/workers/subhosting-relay.deno.ts
RELAY_URL=https://z-subhosting-relay.deno.dev

# The URL where your enviroment is running, must be public
RPC_HOST=https://you.zipper.ngrok.io

# Deno shared secret
SHARED_SECRET=deno_secret

# The URL where your local environment is running. Could be locahost or ngrok
NEXT_PUBLIC_HOST=localhost

# hostname of server that renders function
NEXT_PUBLIC_OUTPUT_SERVER_HOSTNAME=localdev.me:3002

# We use Clerk.dev to handle auth and session. Get an API key from someone who has access to the Zipper account on clerk.dev
NEXT_PUBLIC_CLERK_FRONTEND_API=clerk.evolving.lioness-62.lcl.dev
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=
CLERK_SECRET_KEY=
CLERK_JWT_KEY=

# Connect to our LSP server (zipper-lsp)
NEXT_PUBLIC_LSP=ws://localhost:4002/deno_lsp OR wss://zipper-lsp.onrender.com/deno_lsp

# Zipper Slack app
NEXT_PUBLIC_SLACK_CLIENT_ID=1306956569105.4837206910023
SLACK_CLIENT_SECRET=

# The URL for the Zipper API
NEXT_PUBLIC_ZIPPER_API_URL=https://localhost:3000/api